@mixin border-1px($color: $border-color, $radius: 0px) {
  position: relative;
  &::after {
    position: absolute;
    top: 0;
    left: 0;
    content: '';
    width: 100%;
    height: 100%;
    border: 1px solid $color;
    transform-origin: left top;
    transform: scale(1);
    border-radius: $radius;
    box-sizing: border-box;
    @media (min-resolution: 1.5dppx) {
      transform: scale(0.7);
      width: 150%;
      height: 150%;
      border-radius: $radius * 1.5;
    }
    @media (min-resolution: 2dppx) {
      transform: scale(0.5);
      width: 200%;
      height: 200%;
      border-radius: $radius * 2;
    }
    @media (min-resolution: 3dppx) {
      transform: scale(0.333);
      width: 300%;
      height: 300%;
      border-radius: $radius * 3;
    }
  }
}

@mixin border-top-1px($color) {
  position: relative;
  &::before {
    position: absolute;
    top: 0;
    left: 0;
    content: '';
    width: 100%;
    // height: 100%;
    border-top: 1px solid $color;
    transform-origin: left top;
    transform: scale(1);
    // z-index: -1;
    box-sizing: border-box;
    @media (min-resolution: 1.5dppx) {
      transform: scale(0.7);
      width: 150%;
    }
    @media (min-resolution: 2dppx) {
      transform: scale(0.5);
      width: 200%;
    }
    @media (min-resolution: 3dppx) {
      transform: scale(0.333);
      width: 300%;
    }
  }
}

@mixin border-bottom-1px($color) {
  position: relative;
  &::after {
    position: absolute;
    bottom: 0;
    left: 0;
    content: '';
    width: 100%;
    border-bottom: 1px solid $color;
    transform-origin: left bottom;
    transform: scale(1);
    box-sizing: border-box;
    @media (min-resolution: 1.5dppx) {
      transform: scale(0.7);
      width: 150%;
    }
    @media (min-resolution: 2dppx) {
      transform: scale(0.5);
      width: 200%;
    }
    @media (min-resolution: 3dppx) {
      transform: scale(0.333);
      width: 300%;
    }
  }
}

@mixin border-left-1px($color) {
  position: relative;
  &::before {
    position: absolute;
    top: 0;
    left: 0;
    content: '';
    // width: 100%;
    height: 100%;
    border-left: 1px solid $color;
    transform-origin: left top;
    transform: scale(1);
    box-sizing: border-box;
    @media (min-resolution: 1.5dppx) {
      transform: scale(0.7);
      height: 150%;
    }
    @media (min-resolution: 2dppx) {
      transform: scale(0.5);
      height: 200%;
    }
    @media (min-resolution: 3dppx) {
      transform: scale(0.333);
      height: 300%;
    }
  }
}

@mixin border-right-1px($color) {
  position: relative;
  &::after {
    position: absolute;
    top: 0;
    right: 0;
    content: '';
    // width: 100%;
    height: 100%;
    border-right: 1px solid $color;
    transform-origin: right top;
    transform: scale(1);
    box-sizing: border-box;
    z-index: 1000;
    @media (min-resolution: 1.5dppx) {
      transform: scale(0.7);
      height: 150%;
    }
    @media (min-resolution: 2dppx) {
      transform: scale(0.5);
      height: 200%;
    }
    @media (min-resolution: 3dppx) {
      transform: scale(0.333);
      height: 300%;
    }
  }
}

// 适配iPhoneX
@mixin fix-iphone-x($type, $direction: 'bottom', $value: 68px) {
  $iphone_value_old: constant(safe-area-inset-#{$direction}); // before ios11.2
  $ihpone_value: env(safe-area-inset-#{$direction}); // 11.2 and after
  $fix_value_old: 0px;
  $fix_value: 0px;
  @if $value == 0 {
    $fix_value_old: $iphone_value_old;
    $fix_value: $ihpone_value;
  } @else {
    $fix_value: calc(#{$value} + #{$ihpone_value});
    $fix_value_old: calc(#{$value} + #{$iphone_value_old});
  }

  @if $type == 'position' {
    #{$direction}: $fix_value_old;
    #{$direction}: $fix_value;
  } @else {
    $property: #{$type}-#{$direction};
    #{$property}: $fix_value_old;
    #{$property}: $fix_value;
  }
}

@mixin close_circle_icon($width, $color) {
  width: $width;
  height: $width;
  position: relative;
  border-radius: 50%;
  border: 2px solid $color;
  &::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
    width: 2px;
    height: 50%;
    transform: translate(-50%, -50%) rotateZ(45deg);
    background-color: $color;
  }
  &::after {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
    width: 2px;
    height: 50%;
    transform: translate(-50%, -50%) rotateZ(-45deg);
    background-color: $color;
  }
}
